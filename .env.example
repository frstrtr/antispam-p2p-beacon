# Antispam Beacon Server Configuration

# Bootstrap nodes for P2P network discovery
# Comma-separated list of host:port addresses
BOOTSTRAP_ADDRESSES=node1.example.com:9828,node2.example.com:9828

# Server ports (optional - defaults will be used if not specified)
DEFAULT_P2P_PORT=9828
WEBSOCKET_PORT=9000
HTTP_API_PORT=8081

# Database configuration
DATABASE_FILE=spammers.db

# Beacon mode configuration
# Set to true to enable beacon-only mode (disables external APIs and WebSocket)
# In beacon mode, server only handles P2P communication and local spammer reporting
BEACON_MODE_ONLY=false

# P2P Network Security Configuration
# Enable/disable P2P network security features
ENABLE_P2P_SECURITY=true

# Network authentication
# Pre-shared secret key for network authentication (generate with: python configure_security.py setup)
NETWORK_SECRET_KEY=your_64_character_hex_secret_key_here
REQUIRE_NODE_AUTHENTICATION=true

# Connection limits and rate limiting
MAX_CONNECTIONS_PER_IP=3
CONNECTION_RATE_LIMIT=10
MESSAGE_RATE_LIMIT=100

# Node access control
# Comma-separated list of allowed node UUIDs (whitelist mode - leave empty to allow all)
ALLOWED_NODE_KEYS=
# Comma-separated list of blocked node UUIDs
BLOCKED_NODE_KEYS=
# Comma-separated list of blocked IP addresses
BLOCKED_IP_ADDRESSES=

# Message verification
ENABLE_MESSAGE_SIGNING=false
REJECT_UNSIGNED_MESSAGES=false

# Security logging
LOG_SECURITY_EVENTS=true
SECURITY_LOG_FILE=security.log

# Legacy beacon mode (deprecated - use BEACON_MODE_ONLY instead)
BEACON=false

# Disable database functionality (for testing)
DISABLE_DB=false

# Bot configuration (if using Telegram bot integration)
BOT_TOKEN=your_bot_token_here
BOT_USERNAME=your_bot_username_here
TARGET_AUDIT_CHANNEL_ID=-100_secret_chat_id

# External API keys for blockchain and spam checking services
TRONSCAN_API_KEY=your_tronscan_token
ETHERSCAN_API_KEY=your_etherscan_token
EXTERNAL_API_SECRET=a_very_secret_and_long_api_key_for_external_access
